# -*- coding: utf-8 -*-
"""Modelo para saber si la fruta es una fresa

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z6AIy4Zzbr3V8kNJYi-2PCaLOcKxbWVI
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import accuracy_score

# Cargar el conjunto de datos de frutas
frutas = pd.read_csv('datosFresa.csv')

# Dividir el conjunto de datos en características (X) y etiquetas (y)
X = frutas.drop('es_fresa', axis=1)
y = frutas['es_fresa']

# Dividir el conjunto de datos en entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Escalar las características para mejorar el rendimiento del modelo
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Crear y entrenar la red neuronal
clf = MLPClassifier(hidden_layer_sizes=(64, 32), activation='relu', max_iter=500, random_state=42)
clf.fit(X_train_scaled, y_train)

# Predecir en el conjunto de prueba
y_pred = clf.predict(X_test_scaled)

# Calcular la precisión del modelo
accuracy = accuracy_score(y_test, y_pred)
print("Precisión del modelo: {:.2f}%".format(accuracy * 100))

# Visualizar la estructura de la red neuronal
coefs = clf.coefs_
plt.figure(figsize=(10, 5))
for i in range(len(coefs)):
    plt.subplot(1, len(coefs), i + 1)
    plt.imshow(coefs[i], cmap='viridis', interpolation='none')
    plt.title('Capa {}'.format(i + 1))
    plt.colorbar()
    plt.xlabel('Neuronas en la capa {}'.format(i))
    plt.ylabel('Entradas a la capa {}'.format(i))
plt.tight_layout()
plt.show()

# Definimos una función para predecir si una fruta es una fresa o no
def predecir_fresa(peso, diametro, color_rojo, color_amarillo, color_verde):
    # Escalamos las características de la fruta
    fruta_scaled = scaler.transform([[peso, diametro, color_rojo, color_amarillo, color_verde]])
    # Hacemos la predicción con el modelo
    prediccion = clf.predict(fruta_scaled)
    if prediccion[0] == 1:
        return "La fruta es una fresa."
    else:
        return "La fruta no es una fresa."

# Ejemplo de una fruta para probar la red neuronal
peso_ejemplo = 140
diametro_ejemplo = 6.5
color_rojo_ejemplo = 1
color_amarillo_ejemplo = 0
color_verde_ejemplo = 0

# Realizamos la predicción
resultado = predecir_fresa(peso_ejemplo, diametro_ejemplo, color_rojo_ejemplo, color_amarillo_ejemplo, color_verde_ejemplo)

# Imprimimos el resultado
print(resultado)